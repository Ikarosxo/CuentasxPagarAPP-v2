@model IEnumerable<CuentasxPagarAPP_v2.Models.DocumentoxPagar>

@{
    ViewData["Title"] = "Listado Documentos";
}

<h1>Listado de Documento por Pagar</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Añadir Documento por Pagar </a>
</p>

<form asp-action="Index" method="get" class="col-md-4 offset-md-8">
        <div class="form-group">
            <label for="searchDate">Buscar por fecha:</label>
            <input type="date" id="searchDate" name="searchDate" class="form-control">
        </div>
        <div class="form-group">
            <label for="searchMonto">Buscar por monto:</label>
            <input type="number" id="searchNumero" name="searchMonto" class="form-control">
        </div>
        <div style="text-align: right">
        <button type="submit" class="btn btn-primary">Buscar</button>
        </div>
        
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.NumFacturaPagar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaDocumento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Monto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FechaRegistro)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Proveedor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Estado)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NumFacturaPagar)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaDocumento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Monto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaRegistro)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Proveedor.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                    <form method="post" asp-action="Contabilizar" asp-route-id="@item.NumDocument" asp-route-method="POST">
                        <button type="submit" class="btn btn-primary contabilizar">Contabilizar</button>
                    </form>

                <a asp-action="Edit" asp-route-id="@item.NumDocument" class="btn btn-warning">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.NumDocument" class="btn btn-success">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.NumDocument" class="btn btn-danger">Eliminar</a>
            </td>
        </tr>

}
    </tbody>
</table>

<div id="mensaje" class="alert alert-success" style="display:none;"></div>


<script>
    // Obtener el valor del TempData y asignarlo al elemento div
    var mensaje = '@TempData["Message"]';
    var mensajeDiv = document.getElementById("mensaje");
    mensajeDiv.innerText = mensaje;

    // Si el mensaje no está vacío, mostrar el elemento div
    if (mensaje.trim() != "") {
        mensajeDiv.style.display = "block";
    }
</script>
